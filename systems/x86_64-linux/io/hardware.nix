# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{
  config,
  lib,
  pkgs,
  modulesPath,
  ...
}: {
  imports = [
    (modulesPath + "/installer/scan/not-detected.nix")
  ];

  boot = {
    initrd.availableKernelModules = ["nfs" "xhci_pci" "ahci" "usbhid" "usb_storage" "sd_mod" "rtsx_pci_sdmmc"];
    initrd.kernelModules = [];
    kernelModules = ["kvm-intel" "i2c-dev"];
    supportedFilesystems = ["nfs"];
    extraModulePackages = [];
  };

  fileSystems."/" = {
    device = "/dev/disk/by-uuid/885ee914-4924-4066-bfa5-b8d66ff4be88";
    fsType = "ext4";
  };

  boot.initrd.luks.devices."luks-00da38f2-999e-4a95-b0d2-0a9dc4d161fe".device = "/dev/disk/by-uuid/00da38f2-999e-4a95-b0d2-0a9dc4d161fe";

  fileSystems."/boot" = {
    device = "/dev/disk/by-uuid/911A-4486";
    fsType = "vfat";
  };

  # fileSystems."/home/russ/nfs" = {
  #   device = "algol:/mnt/pool/russ";
  #   fsType = "nfs";
  #   # TODO: lazymounting
  #   # options = [ "x-systemd.automount" "noauto" ];
  # };

  swapDevices = [
    {device = "/dev/disk/by-uuid/7afcdde1-ded3-480e-ae43-7ff91ff5f818";}
  ];

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.enp0s20f0u6u4.useDHCP = lib.mkDefault true;
  # networking.interfaces.enp0s31f6.useDHCP = lib.mkDefault true;
  # networking.interfaces.wlp2s0.useDHCP = lib.mkDefault true;

  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
  powerManagement.cpuFreqGovernor = lib.mkDefault "powersave";
  hardware.cpu.intel.updateMicrocode = lib.mkDefault config.hardware.enableRedistributableFirmware;
}
